#ifndef OTHER_QUICKSORT_H_INCLUDED
#define OTHER_QUICKSORT_H_INCLUDED

/**
来自维基百科速度最快的快速排序算法
**/
void other_quick_sort_0(int *ar,int l,int r);

/**
c语言库实现的快速排序算法
**/
void clib_quick_sort(int *ar,int l,int r);

/**
安徽工业大学计算机学院 周建钦 提出的超快速排序算法 结合了快速排序和基数排序的优点
缺点是对整数有效，浮点数就不能采用了
**/
void bq_sort(int *ar,int l,int r,int k);

/**
 安徽工业大学 汤亚玲提出的高效快速排序 思想是采用数列的平均值作为key
 此人这篇文章严重怀疑是作假的，他文章中的程序很多错误，甚至是常识性的语法错误。
 例如：他的算法函数名称为EQ_sort,递归调用调用的却是Q_sort，不知道他的语法是如何通过编译检查的？
 再如：他的交换用的是swap(a,b)这样的形式，这是值传递啊，根本起不到交换效果，连基本的C语言都没学好
 再如：他的快速排序算法根本就写错了，按照他的代码，排出来的结果是错误的！
 还有，求平均值里面的r<l的判断是冗余的，浪费时间，因为进入平均函数，肯定是r>l，否则，EQ_sort直接就退出了，根本不可能调用这个函数
 为了验证他的想法是否具有可行性质，我帮他修改了程序，试验证明，算法性能远不如原来快速排序快！而且是我所有测试算法中最慢的，因为求平均值耗费了太多的时间
 得不偿失。这样的文章居然发表于《计算机工程》这样的核心期刊，审稿的人估计是放水的。
 不过他的文章有个东西倒是正确的，就是KEY值的选取，会导致分区的均衡性不同，而均衡性不同，会导致速度不同。
 **/
void eq_sort(int *,int ,int);

#endif // OTHER_QUICKSORT_H_INCLUDED
